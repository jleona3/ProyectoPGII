USE [TRZ6_CONDOMINIO]

ALTER TABLE TRZ6_USUARIO
ALTER COLUMN FOTO_PERFIL VARCHAR(200);

-- SP: Insertar propietario
CREATE OR ALTER PROCEDURE SP_I_PROPIETARIO_01
    @ID_APTO INT,
    @EMAIL VARCHAR(150),
    @NOMBRES VARCHAR(100),
    @APELLIDOS VARCHAR(100),
    @DPI VARCHAR(20),
    @TELEFONO VARCHAR(20),
    @FOTO_PERFIL VARCHAR(200),
    @ID_ESTADO INT,
    @ROL_ID INT,
    @PASS VARCHAR(100),
    @CREADO_POR VARCHAR(100)
AS
BEGIN
    -- Validar si el DPI ya existe
    IF EXISTS (SELECT 1 FROM TRZ6_USUARIO WHERE DPI = @DPI)
    BEGIN
        RAISERROR('El DPI ingresado ya está registrado en el sistema.', 16, 1);
        RETURN;
    END

    -- Validar si el EMAIL ya existe
    IF EXISTS (SELECT 1 FROM TRZ6_USUARIO WHERE EMAIL = @EMAIL)
    BEGIN
        RAISERROR('El correo electrónico ingresado ya está registrado en el sistema.', 16, 1);
        RETURN;
    END

    INSERT INTO TRZ6_USUARIO (
        ID_APTO, EMAIL, NOMBRES, APELLIDOS, DPI, TELEFONO, FOTO_PERFIL,
        ID_ESTADO, ROL_ID, PASS, CREADO_POR, FE_CREACION
    ) VALUES (
        @ID_APTO, @EMAIL, @NOMBRES, @APELLIDOS, @DPI, @TELEFONO, @FOTO_PERFIL,
        @ID_ESTADO, @ROL_ID, @PASS, @CREADO_POR, GETDATE()
    );
END
GO

-- SP: Actualizar propietario
CREATE OR ALTER PROCEDURE SP_U_PROPIETARIO_01
    @ID_USER INT,
    @ID_APTO INT,
    @EMAIL VARCHAR(150),
    @NOMBRES VARCHAR(100),
    @APELLIDOS VARCHAR(100),
    @DPI VARCHAR(20),
    @TELEFONO VARCHAR(20),
    @FOTO_PERFIL VARCHAR(200),
    @ID_ESTADO INT,
    @ROL_ID INT,
    @MODIFICADO_POR VARCHAR(100)
AS
BEGIN
    -- Validar si el nuevo DPI ya existe en otro usuario
    IF EXISTS (SELECT 1 FROM TRZ6_USUARIO WHERE DPI = @DPI AND ID_USER <> @ID_USER)
    BEGIN
        RAISERROR('El DPI ingresado ya está registrado en otro usuario.', 16, 1);
        RETURN;
    END

    -- Validar si el nuevo EMAIL ya existe en otro usuario
    IF EXISTS (SELECT 1 FROM TRZ6_USUARIO WHERE EMAIL = @EMAIL AND ID_USER <> @ID_USER)
    BEGIN
        RAISERROR('El correo electrónico ingresado ya está registrado en otro usuario.', 16, 1);
        RETURN;
    END

    UPDATE TRZ6_USUARIO
    SET
        ID_APTO = @ID_APTO,
        EMAIL = @EMAIL,
        NOMBRES = @NOMBRES,
        APELLIDOS = @APELLIDOS,
        DPI = @DPI,
        TELEFONO = @TELEFONO,
        FOTO_PERFIL = @FOTO_PERFIL,
        ID_ESTADO = @ID_ESTADO,
        ROL_ID = @ROL_ID,
        MODIFICADO_POR = @MODIFICADO_POR,
        FE_MODIFICACION = GETDATE()
    WHERE ID_USER = @ID_USER;
END
GO

-- SP: Eliminar propietario
CREATE PROCEDURE SP_D_PROPIETARIO_01
    @ID_USER INT
AS
BEGIN
    DELETE FROM PROPIETARIOS WHERE ID_USER = @ID_USER;
END
GO

-- SP: Obtener propietario por ID
CREATE PROCEDURE SP_O_PROPIETARIO_01
    @ID_USER INT
AS
BEGIN
    SELECT 
        P.ID_USER,
        P.ID_APTO,
        P.EMAIL,
        P.NOMBRES,
        P.APELLIDOS,
        P.DPI,
        P.TELEFONO,
        P.FOTO_PERFIL,
        P.ID_ESTADO,
        P.ROL_ID,
        P.PASS,
        P.CREADO_POR,
        CONVERT(VARCHAR(10), P.FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, P.FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, P.FE_CREACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, P.FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, P.FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION,
        P.MODIFICADO_POR,
        CONVERT(VARCHAR(10), P.FE_MODIFICACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, P.FE_MODIFICACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, P.FE_MODIFICACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, P.FE_MODIFICACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, P.FE_MODIFICACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_MODIFICACION
    FROM PROPIETARIOS P
    WHERE P.ID_USER = @ID_USER;
END
GO

-- SP: Listar todos los propietarios
CREATE OR ALTER PROCEDURE SP_L_PROPIETARIO_TODOS
AS
BEGIN
    SELECT 
        U.ID_USER,
        U.EMAIL,
        (U.NOMBRES + ' ' + U.APELLIDOS) AS NOMBRE_COMPLETO,
        U.DPI,
        U.TELEFONO,
        U.FOTO_PERFIL,
        U.ID_ESTADO,
        E.DESCRIPCION AS NOMBRE_ESTADO,
        U.ROL_ID,
        R.ROL_NOM AS ROL_NOMBRE,
        U.ID_APTO,
        A.NUM_TORRE,
        A.NIVEL,
        A.NUM_APTO,
        U.CREADO_POR,
        CONVERT(VARCHAR(10), U.FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_CREACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION,
        U.MODIFICADO_POR,
        CONVERT(VARCHAR(10), U.FE_MODIFICACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_MODIFICACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_MODIFICACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_MODIFICACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_MODIFICACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_MODIFICACION
    FROM TRZ6_USUARIO U
    INNER JOIN TRZ6_CAT_ESTADO E ON U.ID_ESTADO = E.ID_ESTADO
    INNER JOIN TRZ6_ROL R ON U.ROL_ID = R.ROL_ID
    INNER JOIN TRZ6_CONDOMINIO A ON U.ID_APTO = A.ID_APTO;
END
GO

-- 1. Probar el Insert (SP_I_PROPIETARIO_01)
EXEC SP_I_PROPIETARIO_01
    @ID_APTO = 2,
    @EMAIL = 'jorge.leon@hotmail.es',
    @NOMBRES = 'Carlos',
    @APELLIDOS = 'López',
    @DPI = '1234567890111',
    @TELEFONO = '55550000',
    @FOTO_PERFIL = 'foto_test.jpg',
    @ID_ESTADO = 1,
    @ROL_ID = 2,
    @PASS = '12345',
    @CREADO_POR = 'Administrador';

	select * from TRZ6_USUARIO go
	select * from TRZ6_ROL go
	select * from TRZ6_CAT_ESTADO go
	SELECT * FROM TRZ6_CONDOMINIO GO

	EXEC SP_L_PROPIETARIO_TODOS;

	SELECT ID_USER, ID_APTO FROM TRZ6_USUARIO;

UPDATE TRZ6_USUARIO SET ID_APTO = 3 WHERE ID_USER = 4;
UPDATE TRZ6_USUARIO SET ID_APTO = 5 WHERE ID_USER = 6;

-- 1. SP para obtener un propietario por ID
CREATE OR ALTER PROCEDURE SP_O_PROPIETARIO_01
    @ID_USER INT
AS
BEGIN
    SELECT 
        U.ID_USER,
        U.NOMBRES,
        U.APELLIDOS,
        U.EMAIL,
        U.DPI,
        U.TELEFONO,
        U.FOTO_PERFIL,
        U.ID_ESTADO,
        E.DESCRIPCION AS NOMBRE_ESTADO,
        U.ROL_ID,
        R.ROL_NOM AS ROL_NOMBRE,
        U.ID_APTO,
        C.NUM_TORRE,
        C.NIVEL,
        C.NUM_APTO,
        U.PASS,
        U.CREADO_POR,
        CONVERT(VARCHAR(10), U.FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_CREACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION,
        U.MODIFICADO_POR,
        CONVERT(VARCHAR(10), U.FE_MODIFICACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_MODIFICACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_MODIFICACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_MODIFICACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_MODIFICACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_MODIFICACION
    FROM TRZ6_USUARIO U
    INNER JOIN TRZ6_CAT_ESTADO E ON U.ID_ESTADO = E.ID_ESTADO
    INNER JOIN TRZ6_ROL R ON U.ROL_ID = R.ROL_ID
    INNER JOIN TRZ6_CONDOMINIO C ON U.ID_APTO = C.ID_APTO
    WHERE U.ID_USER = @ID_USER;
END
GO

-- 2. SP para listar todos los propietarios
CREATE OR ALTER PROCEDURE SP_L_PROPIETARIO_TODOS
AS
BEGIN
    SELECT 
        U.ID_USER,
        U.NOMBRES,
        U.APELLIDOS,
        U.EMAIL,
        U.DPI,
        U.TELEFONO,
        U.FOTO_PERFIL,
        U.ID_ESTADO,
        E.DESCRIPCION AS NOMBRE_ESTADO,
        U.ROL_ID,
        R.ROL_NOM AS ROL_NOMBRE,
        U.ID_APTO,
        C.NUM_TORRE,
        C.NIVEL,
        C.NUM_APTO,
        U.PASS,
        U.CREADO_POR,
        CONVERT(VARCHAR(10), U.FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_CREACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION,
        U.MODIFICADO_POR,
        CONVERT(VARCHAR(10), U.FE_MODIFICACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_MODIFICACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_MODIFICACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_MODIFICACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_MODIFICACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_MODIFICACION
    FROM TRZ6_USUARIO U
    INNER JOIN TRZ6_CAT_ESTADO E ON U.ID_ESTADO = E.ID_ESTADO
    INNER JOIN TRZ6_ROL R ON U.ROL_ID = R.ROL_ID
    INNER JOIN TRZ6_CONDOMINIO C ON U.ID_APTO = C.ID_APTO;
END
GO

-- 3. SP para insertar propietario
CREATE OR ALTER PROCEDURE SP_I_PROPIETARIO_01
    @ID_APTO INT,
    @EMAIL VARCHAR(150),
    @NOMBRES VARCHAR(100),
    @APELLIDOS VARCHAR(100),
    @DPI VARCHAR(20),
    @TELEFONO VARCHAR(20),
    @FOTO_PERFIL VARCHAR(200),
    @ID_ESTADO INT,
    @ROL_ID INT,
    @PASS VARCHAR(100),
    @CREADO_POR VARCHAR(100)
AS
BEGIN
    IF EXISTS (SELECT 1 FROM TRZ6_USUARIO WHERE DPI = @DPI)
    BEGIN
        RAISERROR('El DPI ingresado ya está registrado en el sistema.', 16, 1);
        RETURN;
    END

    IF EXISTS (SELECT 1 FROM TRZ6_USUARIO WHERE EMAIL = @EMAIL)
    BEGIN
        RAISERROR('El correo electrónico ingresado ya está registrado en el sistema.', 16, 1);
        RETURN;
    END

    INSERT INTO TRZ6_USUARIO (
        ID_APTO, EMAIL, NOMBRES, APELLIDOS, DPI, TELEFONO, FOTO_PERFIL,
        ID_ESTADO, ROL_ID, PASS, CREADO_POR, FE_CREACION
    ) VALUES (
        @ID_APTO, @EMAIL, @NOMBRES, @APELLIDOS, @DPI, @TELEFONO, @FOTO_PERFIL,
        @ID_ESTADO, @ROL_ID, @PASS, @CREADO_POR, GETDATE()
    );
END
GO

-- 4. SP para actualizar propietario
CREATE OR ALTER PROCEDURE SP_U_PROPIETARIO_01
    @ID_USER INT,
    @ID_APTO INT,
    @EMAIL VARCHAR(150),
    @NOMBRES VARCHAR(100),
    @APELLIDOS VARCHAR(100),
    @DPI VARCHAR(20),
    @TELEFONO VARCHAR(20),
    @FOTO_PERFIL VARCHAR(200),
    @ID_ESTADO INT,
    @ROL_ID INT,
    @MODIFICADO_POR VARCHAR(100)
AS
BEGIN
    IF EXISTS (SELECT 1 FROM TRZ6_USUARIO WHERE DPI = @DPI AND ID_USER <> @ID_USER)
    BEGIN
        RAISERROR('El DPI ingresado ya está registrado en el sistema.', 16, 1);
        RETURN;
    END

    IF EXISTS (SELECT 1 FROM TRZ6_USUARIO WHERE EMAIL = @EMAIL AND ID_USER <> @ID_USER)
    BEGIN
        RAISERROR('El correo electrónico ingresado ya está registrado en el sistema.', 16, 1);
        RETURN;
    END

    UPDATE TRZ6_USUARIO
    SET 
        ID_APTO = @ID_APTO,
        EMAIL = @EMAIL,
        NOMBRES = @NOMBRES,
        APELLIDOS = @APELLIDOS,
        DPI = @DPI,
        TELEFONO = @TELEFONO,
        FOTO_PERFIL = @FOTO_PERFIL,
        ID_ESTADO = @ID_ESTADO,
        ROL_ID = @ROL_ID,
        MODIFICADO_POR = @MODIFICADO_POR,
        FE_MODIFICACION = GETDATE()
    WHERE ID_USER = @ID_USER;
END
GO