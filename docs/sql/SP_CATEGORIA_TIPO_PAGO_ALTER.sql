USE [TRZ6_CONDOMINIO]

SELECT * FROM TRZ6_CAT_TIPO_PAGO GO

SELECT COLUMN_NAME
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'TRZ6_CAT_TIPO_PAGO'
ORDER BY ORDINAL_POSITION
GO

-- 1. Identificar y eliminar la restricción asociada al campo CODIGO
ALTER TABLE TRZ6_CAT_TIPO_PAGO
DROP CONSTRAINT UQ__TRZ6_CAT__CC87E1260E06C583;  -- reemplazar si el nombre cambia

-- 2. Eliminar la columna CODIGO
ALTER TABLE TRZ6_CAT_TIPO_PAGO
DROP COLUMN CODIGO;
GO

-- 3. Renombrar DESCRIPCION a NOMBRE_TIPOPAGO
EXEC sp_rename 'TRZ6_CAT_TIPO_PAGO.DESCRIPCION', 'NOMBRE_TIPOPAGO', 'COLUMN';
GO

-- 4. Agregar los nuevos campos
ALTER TABLE TRZ6_CAT_TIPO_PAGO
ADD 
	MODIFICADO_POR VARCHAR(100) NULL,
    CREADO_POR VARCHAR(100) NOT NULL,    
    FE_MODIFICACION DATETIME NULL;

-- 5. Crear restricción para que NOMBRE_TIPOPAGO sea único
ALTER TABLE TRZ6_CAT_TIPO_PAGO
ADD CONSTRAINT UQ_TRZ6_CAT_TIPO_PAGO UNIQUE (NOMBRE_TIPOPAGO);
GO

SELECT name 
FROM sys.objects 
WHERE type = 'UQ' 
AND parent_object_id = OBJECT_ID('TRZ6_CAT_TIPO_PAGO');

-- 1. Listar por ID (SP_L_CAT_TIPO_PAGO_01)
/********** LISTAR POR ID **********/
CREATE OR ALTER PROCEDURE SP_L_CAT_TIPO_PAGO_01  
    @ID_TIPO_PAGO INT  
AS  
BEGIN  
    SELECT  
        ID_TIPO_PAGO,
        NOMBRE_TIPOPAGO,
        CONVERT(VARCHAR(10), FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), 
            CASE WHEN DATEPART(HOUR, FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, FE_CREACION) % 12 END
        ), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION,
        CREADO_POR,
        MODIFICADO_POR,
        CONVERT(VARCHAR(10), FE_MODIFICACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2),
            CASE WHEN DATEPART(HOUR, FE_MODIFICACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, FE_MODIFICACION) % 12 END
        ), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_MODIFICACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, FE_MODIFICACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_MODIFICACION
    FROM TRZ6_CAT_TIPO_PAGO  
    WHERE ID_TIPO_PAGO = @ID_TIPO_PAGO
END  
GO

-- 2. Listar todos (SP_L_CAT_TIPO_PAGO_TODOS)
/********** LISTAR TODOS **********/
CREATE OR ALTER PROCEDURE SP_L_CAT_TIPO_PAGO_TODOS
AS
BEGIN
    SELECT
        ID_TIPO_PAGO,
        NOMBRE_TIPOPAGO,
        CONVERT(VARCHAR(10), FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2),
            CASE WHEN DATEPART(HOUR, FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, FE_CREACION) % 12 END
        ), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION,
        CREADO_POR,
        MODIFICADO_POR,
        CONVERT(VARCHAR(10), FE_MODIFICACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2),
            CASE WHEN DATEPART(HOUR, FE_MODIFICACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, FE_MODIFICACION) % 12 END
        ), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_MODIFICACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, FE_MODIFICACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_MODIFICACION
    FROM TRZ6_CAT_TIPO_PAGO
    ORDER BY ID_TIPO_PAGO DESC
END
GO

-- 3. Obtener por ID (SP_O_CAT_TIPO_PAGO_01)
/********** OBTENER POR ID **********/
CREATE OR ALTER PROCEDURE SP_O_CAT_TIPO_PAGO_01
    @ID_TIPO_PAGO INT
AS
BEGIN
    SELECT
        ID_TIPO_PAGO,
        NOMBRE_TIPOPAGO,
        CREADO_POR,
        CONVERT(VARCHAR(10), FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2),
            CASE WHEN DATEPART(HOUR, FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, FE_CREACION) % 12 END
        ), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION,
        MODIFICADO_POR,
        CONVERT(VARCHAR(10), FE_MODIFICACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2),
            CASE WHEN DATEPART(HOUR, FE_MODIFICACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, FE_MODIFICACION) % 12 END
        ), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_MODIFICACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, FE_MODIFICACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_MODIFICACION
    FROM TRZ6_CAT_TIPO_PAGO
    WHERE ID_TIPO_PAGO = @ID_TIPO_PAGO
END
GO

-- 4. Insertar (SP_I_CAT_TIPO_PAGO_01)
/********** INSERTAR **********/
CREATE OR ALTER PROCEDURE SP_I_CAT_TIPO_PAGO_01
    @CREADO_POR VARCHAR(150),
    @NOMBRE_TIPOPAGO VARCHAR(150)
AS
BEGIN
    DECLARE @FechaActual DATETIME = DATEADD(HOUR, -6, GETUTCDATE()); -- Hora Guatemala
    
    -- Validar duplicidad
    IF EXISTS (SELECT 1 FROM TRZ6_CAT_TIPO_PAGO WHERE NOMBRE_TIPOPAGO = @NOMBRE_TIPOPAGO)
    BEGIN
        RAISERROR('El tipo de pago ya existe. No se puede duplicar.', 16, 1);
        RETURN;
    END

    INSERT INTO TRZ6_CAT_TIPO_PAGO (
        NOMBRE_TIPOPAGO,
        CREADO_POR,
        FE_CREACION,
        MODIFICADO_POR,
        FE_MODIFICACION
    )
    VALUES (
        @NOMBRE_TIPOPAGO,
        @CREADO_POR,
        @FechaActual,
        @CREADO_POR,
        @FechaActual
    );
END
GO

-- 5. Actualizar (SP_U_CAT_TIPO_PAGO_01)
/********** ACTUALIZAR **********/
CREATE OR ALTER PROCEDURE SP_U_CAT_TIPO_PAGO_01
    @ID_TIPO_PAGO INT,
    @NOMBRE_TIPOPAGO VARCHAR(150),
    @MODIFICADO_POR VARCHAR(150)
AS
BEGIN
    DECLARE @FechaActual DATETIME = DATEADD(HOUR, -6, GETUTCDATE()); -- Hora Guatemala
    
    -- Validar duplicidad excluyendo el mismo registro
    IF EXISTS (SELECT 1 FROM TRZ6_CAT_TIPO_PAGO WHERE NOMBRE_TIPOPAGO = @NOMBRE_TIPOPAGO AND ID_TIPO_PAGO != @ID_TIPO_PAGO)
    BEGIN
        RAISERROR('El tipo de pago ya existe. No se puede duplicar.', 16, 1);
        RETURN;
    END

    UPDATE TRZ6_CAT_TIPO_PAGO
    SET
        NOMBRE_TIPOPAGO = @NOMBRE_TIPOPAGO,
        MODIFICADO_POR = @MODIFICADO_POR,
        FE_MODIFICACION = @FechaActual
    WHERE ID_TIPO_PAGO = @ID_TIPO_PAGO;
END
GO

-- 6. Eliminar (SP_D_CAT_TIPO_PAGO_01)
/********** ELIMINAR **********/
CREATE OR ALTER PROCEDURE SP_D_CAT_TIPO_PAGO_01
    @ID_TIPO_PAGO INT
AS
BEGIN
    DELETE FROM TRZ6_CAT_TIPO_PAGO
    WHERE ID_TIPO_PAGO = @ID_TIPO_PAGO;
END
GO

select * from TRZ6_USUARIO go