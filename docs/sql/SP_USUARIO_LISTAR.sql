USE [TRZ6_CONDOMINIO]

SELECT * FROM TRZ6_USUARIO GO

SELECT COLUMN_NAME
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'TRZ6_USUARIO'
ORDER BY ORDINAL_POSITION
GO

-- 1. SP – Listar todos los usuarios
CREATE OR ALTER PROCEDURE SP_L_USUARIO_TODOS
AS
BEGIN
    SELECT 
        U.ID_USER,
        U.EMAIL,
        U.NOMBRES,
        U.APELLIDOS,
        U.DPI,
        U.TELEFONO,
        U.ID_APTO,
        C.NUM_TORRE,
        C.NIVEL,
        CONCAT('Torre ', C.NUM_TORRE, ' - Apto ', C.NUM_APTO) AS APTO_COMPLETO,
        U.ROL_ID,
        R.ROL_NOM,
        U.ID_ESTADO,
        E.DESCRIPCION AS ESTADO_DESC,
        CONVERT(VARCHAR(10), U.FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_CREACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION
    FROM TRZ6_USUARIO U
        INNER JOIN TRZ6_CONDOMINIO C ON U.ID_APTO = C.ID_APTO
        INNER JOIN TRZ6_CAT_ESTADO E ON U.ID_ESTADO = E.ID_ESTADO
        INNER JOIN TRZ6_ROL R ON U.ROL_ID = R.ROL_ID
    ORDER BY U.ID_USER DESC;
END
GO

-- 2. SP – Obtener usuario por ID
CREATE OR ALTER PROCEDURE SP_O_USUARIO_01
    @ID_USER INT
AS
BEGIN
    SELECT 
        U.ID_USER,
        U.EMAIL,
        U.PASS,
        U.NOMBRES,
        U.APELLIDOS,
        U.DPI,
        U.TELEFONO,
        U.ID_APTO,
        C.NUM_TORRE,
        C.NIVEL,
        C.NUM_APTO,
        U.ROL_ID,
        R.ROL_NOM,
        U.ID_ESTADO,
        E.DESCRIPCION AS ESTADO_DESC,
        U.FOTO_PERFIL,
        CONVERT(VARCHAR(10), U.FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_CREACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION
    FROM TRZ6_USUARIO U
        INNER JOIN TRZ6_CONDOMINIO C ON U.ID_APTO = C.ID_APTO
        INNER JOIN TRZ6_CAT_ESTADO E ON U.ID_ESTADO = E.ID_ESTADO
        INNER JOIN TRZ6_ROL R ON U.ROL_ID = R.ROL_ID
    WHERE U.ID_USER = @ID_USER;
END
GO

-- 3. SP – Insertar usuario (con validación de EMAIL único)
CREATE OR ALTER PROCEDURE SP_I_USUARIO_01
    @ID_APTO INT,
    @EMAIL VARCHAR(150),
    @PASS VARCHAR(150),
    @NOMBRES VARCHAR(150),
    @APELLIDOS VARCHAR(150),
    @DPI VARCHAR(50),
    @TELEFONO VARCHAR(50),
    @FOTO_PERFIL VARBINARY(MAX),
    @ID_ESTADO INT,
    @ROL_ID INT
AS
BEGIN
    -- Validar duplicidad de correo
    IF EXISTS (SELECT 1 FROM TRZ6_USUARIO WHERE EMAIL = @EMAIL)
    BEGIN
        RAISERROR('El correo ya está registrado.', 16, 1);
        RETURN;
    END

    INSERT INTO TRZ6_USUARIO (
        ID_APTO,
        EMAIL,
        PASS,
        NOMBRES,
        APELLIDOS,
        DPI,
        TELEFONO,
        FOTO_PERFIL,
        ID_ESTADO,
        FE_CREACION,
        ROL_ID
    )
    VALUES (
        @ID_APTO,
        @EMAIL,
        @PASS,
        @NOMBRES,
        @APELLIDOS,
        @DPI,
        @TELEFONO,
        @FOTO_PERFIL,
        @ID_ESTADO,
        DATEADD(HOUR, -6, GETUTCDATE()), -- Hora Guatemala
        @ROL_ID
    );
END
GO

-- 4. SP – Actualizar usuario (con validación de EMAIL único excluyendo el mismo ID)
CREATE OR ALTER PROCEDURE SP_U_USUARIO_01
    @ID_USER INT,
    @ID_APTO INT,
    @EMAIL VARCHAR(150),
    @PASS VARCHAR(150),
    @NOMBRES VARCHAR(150),
    @APELLIDOS VARCHAR(150),
    @DPI VARCHAR(50),
    @TELEFONO VARCHAR(50),
    @FOTO_PERFIL VARBINARY(MAX),
    @ID_ESTADO INT,
    @ROL_ID INT
AS
BEGIN
    -- Validar duplicidad de correo excluyendo el usuario actual
    IF EXISTS (SELECT 1 FROM TRZ6_USUARIO WHERE EMAIL = @EMAIL AND ID_USER != @ID_USER)
    BEGIN
        RAISERROR('El correo ya está registrado por otro usuario.', 16, 1);
        RETURN;
    END

    UPDATE TRZ6_USUARIO
    SET
        ID_APTO = @ID_APTO,
        EMAIL = @EMAIL,
        PASS = @PASS,
        NOMBRES = @NOMBRES,
        APELLIDOS = @APELLIDOS,
        DPI = @DPI,
        TELEFONO = @TELEFONO,
        FOTO_PERFIL = @FOTO_PERFIL,
        ID_ESTADO = @ID_ESTADO,
        ROL_ID = @ROL_ID
    WHERE ID_USER = @ID_USER;
END
GO

-- 5. SP – Eliminar usuario
CREATE OR ALTER PROCEDURE SP_D_USUARIO_01
    @ID_USER INT
AS
BEGIN
    DELETE FROM TRZ6_USUARIO
    WHERE ID_USER = @ID_USER;
END
GO

select * from TRZ6_CONDOMINIO go
select * from TRZ6_USUARIO go

-- PRUEBA DE INSERCIÓN
EXEC SP_I_USUARIO_01 
    @ID_APTO = 2,
    @EMAIL = 'sarahicastro@gmail.com',
    @PASS = '12345',
    @NOMBRES = 'Mirna Zarahi',
    @APELLIDOS = 'Castro López',
    @DPI = '1234567890101',
    @TELEFONO = '5555-5555',
    @FOTO_PERFIL = NULL,
    @ID_ESTADO = 1,
    @ROL_ID = 1;

EXEC SP_L_USUARIO_TODOS;

sp_helptext 'SP_L_USUARIO_01' go

-- Nuevo SP:
ALTER PROCEDURE [dbo].[SP_L_USUARIO_01]
    @ID_ESTADO INT
AS
BEGIN
    SELECT  
        U.ID_USER,
        U.ID_APTO,
        U.EMAIL,
        U.NOMBRES,
        U.APELLIDOS,
        U.DPI,
        U.TELEFONO,
        U.ID_ESTADO,
        U.FE_CREACION,
        U.ROL_ID,
        R.ROL_NOM,
        C.NUM_TORRE,
        C.NIVEL,
        E.DESCRIPCION AS ESTADO_DESC
    FROM 
        TRZ6_USUARIO U
        INNER JOIN TRZ6_CONDOMINIO C ON U.ID_APTO = C.ID_APTO
        INNER JOIN TRZ6_ROL R ON U.ROL_ID = R.ROL_ID
        INNER JOIN TRZ6_CAT_ESTADO E ON U.ID_ESTADO = E.ID_ESTADO
    WHERE 
        U.ID_ESTADO = @ID_ESTADO
    ORDER BY 
        U.ID_USER DESC
END
GO

-- 1. Listar usuarios por estado (con JOINs)
ALTER PROCEDURE SP_L_USUARIO_01
    @ID_ESTADO INT
AS
BEGIN
    SELECT  
        U.ID_USER,  
        U.ID_APTO,  
        U.EMAIL,  
        U.NOMBRES,  
        U.APELLIDOS,  
        U.DPI,  
        U.TELEFONO,  
        U.ID_ESTADO,  
        U.FE_CREACION,  
        U.ROL_ID,
        R.ROL_NOM,
        C.NUM_TORRE,
        C.NIVEL,
        E.DESCRIPCION AS ESTADO_DESC
    FROM TRZ6_USUARIO U
    INNER JOIN TRZ6_ROL R ON U.ROL_ID = R.ROL_ID
    INNER JOIN TRZ6_CONDOMINIO C ON U.ID_APTO = C.ID_APTO
    INNER JOIN TRZ6_CAT_ESTADO E ON U.ID_ESTADO = E.ID_ESTADO
    WHERE U.ID_ESTADO = @ID_ESTADO
    ORDER BY U.ID_USER DESC
END
GO

-- 2. Mostrar un usuario por ID (con JOINs)
ALTER PROCEDURE SP_O_USUARIO_01
    @ID_USER INT
AS
BEGIN
    SELECT  
        U.ID_USER,  
        U.ID_APTO,  
        U.EMAIL,  
        U.PASS,
        U.NOMBRES,  
        U.APELLIDOS,  
        U.DPI,  
        U.TELEFONO,        
        U.FOTO_PERFIL,
        U.ID_ESTADO,  
        U.FE_CREACION,  
        U.ROL_ID,
        R.ROL_NOM,
        C.NUM_TORRE,
        C.NIVEL,
        E.DESCRIPCION AS ESTADO_DESC
    FROM TRZ6_USUARIO U
    INNER JOIN TRZ6_ROL R ON U.ROL_ID = R.ROL_ID
    INNER JOIN TRZ6_CONDOMINIO C ON U.ID_APTO = C.ID_APTO
    INNER JOIN TRZ6_CAT_ESTADO E ON U.ID_ESTADO = E.ID_ESTADO
    WHERE U.ID_USER = @ID_USER
END
GO

-- 3. Insertar usuario
ALTER PROCEDURE SP_I_USUARIO_01
    @ID_APTO INT,
    @EMAIL VARCHAR(150),
    @PASS VARCHAR(150),
    @NOMBRES VARCHAR(150),
    @APELLIDOS VARCHAR(150),
    @DPI VARCHAR(50),
    @TELEFONO VARCHAR(50),    
    @FOTO_PERFIL VARBINARY(MAX),
    @ID_ESTADO INT,
    @ROL_ID INT
AS
BEGIN
    INSERT INTO TRZ6_USUARIO (
        ID_APTO,
        EMAIL,
        PASS,
        NOMBRES,
        APELLIDOS,
        DPI,
        TELEFONO,        
        FOTO_PERFIL,
        ID_ESTADO,
        FE_CREACION,
        ROL_ID
    )
    VALUES (
        @ID_APTO,
        @EMAIL,
        @PASS,
        @NOMBRES,
        @APELLIDOS,
        @DPI,
        @TELEFONO,        
        @FOTO_PERFIL,
        @ID_ESTADO,
        SYSUTCDATETIME(),
        @ROL_ID
    )
END
GO

-- 4. Actualizar usuario
ALTER PROCEDURE SP_U_USUARIO_01
    @ID_USER INT,
    @ID_APTO INT,
    @EMAIL VARCHAR(150),
    @PASS VARCHAR(150),
    @NOMBRES VARCHAR(150),
    @APELLIDOS VARCHAR(150),
    @DPI VARCHAR(50),
    @TELEFONO VARCHAR(50),    
    @FOTO_PERFIL VARBINARY(MAX),
    @ID_ESTADO INT,
    @ROL_ID INT
AS
BEGIN
    UPDATE TRZ6_USUARIO
    SET
        ID_APTO = @ID_APTO,
        EMAIL = @EMAIL,
        PASS = @PASS,
        NOMBRES = @NOMBRES,
        APELLIDOS = @APELLIDOS,
        DPI = @DPI,
        TELEFONO = @TELEFONO,        
        FOTO_PERFIL = @FOTO_PERFIL,
        ID_ESTADO = @ID_ESTADO,
        ROL_ID = @ROL_ID
    WHERE ID_USER = @ID_USER
END
GO

select * from TRZ6_ROL go
SELECT * FROM TRZ6_USUARIO GO

-- SE AGREGAN TRES CAMPOS FALTANTES
ALTER TABLE TRZ6_USUARIO
ADD CREADO_POR VARCHAR(150) NULL,
    MODIFICADO_POR VARCHAR(150) NULL,
    FE_MODIFICACION DATETIME NULL;

-- SP_L_USUARIO_01 – Listar usuarios
ALTER PROCEDURE [dbo].[SP_L_USUARIO_01]
    @ID_ESTADO INT
AS
BEGIN
    SELECT  
        U.ID_USER,  
        U.ID_APTO,  
        U.EMAIL,  
        U.NOMBRES,  
        U.APELLIDOS,  
        U.DPI,  
        U.TELEFONO,  
        R.ROL_NOM,  
        C.NUM_TORRE,  
        C.NIVEL,  
        E.DESCRIPCION AS ESTADO_DESC,
        U.CREADO_POR,
        U.MODIFICADO_POR,
        CONVERT(VARCHAR(10), U.FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_CREACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION,
        CONVERT(VARCHAR(10), U.FE_MODIFICACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_MODIFICACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_MODIFICACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_MODIFICACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_MODIFICACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_MODIFICACION
    FROM TRZ6_USUARIO U
    INNER JOIN TRZ6_CONDOMINIO C ON U.ID_APTO = C.ID_APTO
    INNER JOIN TRZ6_ROL R ON U.ROL_ID = R.ROL_ID
    INNER JOIN TRZ6_CAT_ESTADO E ON U.ID_ESTADO = E.ID_ESTADO
    WHERE U.ID_ESTADO = @ID_ESTADO
    ORDER BY U.ID_USER DESC;
END
GO

-- SP_O_USUARIO_01 – Obtener usuario por ID
ALTER PROCEDURE [dbo].[SP_O_USUARIO_01]
    @ID_USER INT
AS
BEGIN
    SELECT  
        U.ID_USER,  
        U.ID_APTO,  
        U.EMAIL,  
        U.PASS,
        U.NOMBRES,  
        U.APELLIDOS,  
        U.DPI,  
        U.TELEFONO,  
        U.FOTO_PERFIL,  
        U.ID_ESTADO,  
        U.ROL_ID,
        U.CREADO_POR,
        U.MODIFICADO_POR,
        CONVERT(VARCHAR(10), U.FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_CREACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION,
        CONVERT(VARCHAR(10), U.FE_MODIFICACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_MODIFICACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_MODIFICACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_MODIFICACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_MODIFICACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_MODIFICACION
    FROM TRZ6_USUARIO U
    WHERE U.ID_USER = @ID_USER;
END
GO

-- SP_I_USUARIO_01 – Insertar usuario
ALTER PROCEDURE [dbo].[SP_I_USUARIO_01]
    @ID_APTO INT,
    @EMAIL VARCHAR(150),
    @PASS VARCHAR(150),
    @NOMBRES VARCHAR(150),
    @APELLIDOS VARCHAR(150),
    @DPI VARCHAR(50),
    @TELEFONO VARCHAR(50),
    @FOTO_PERFIL VARBINARY(MAX),
    @ID_ESTADO INT,
    @ROL_ID INT,
    @CREADO_POR VARCHAR(150)
AS
BEGIN
    INSERT INTO TRZ6_USUARIO (
        ID_APTO,
        EMAIL,
        PASS,
        NOMBRES,
        APELLIDOS,
        DPI,
        TELEFONO,
        FOTO_PERFIL,
        ID_ESTADO,
        FE_CREACION,
        ROL_ID,
        CREADO_POR
    )
    VALUES (
        @ID_APTO,
        @EMAIL,
        @PASS,
        @NOMBRES,
        @APELLIDOS,
        @DPI,
        @TELEFONO,
        @FOTO_PERFIL,
        @ID_ESTADO,
        SYSDATETIME(),
        @ROL_ID,
        @CREADO_POR
    );
END
GO

-- SP_U_USUARIO_01 – Actualizar usuario
ALTER PROCEDURE [dbo].[SP_U_USUARIO_01]
    @ID_USER INT,
    @ID_APTO INT,
    @EMAIL VARCHAR(150),
    @PASS VARCHAR(150),
    @NOMBRES VARCHAR(150),
    @APELLIDOS VARCHAR(150),
    @DPI VARCHAR(50),
    @TELEFONO VARCHAR(50),
    @FOTO_PERFIL VARBINARY(MAX),
    @ID_ESTADO INT,
    @ROL_ID INT,
    @MODIFICADO_POR VARCHAR(150)
AS
BEGIN
    UPDATE TRZ6_USUARIO
    SET
        ID_APTO = @ID_APTO,
        EMAIL = @EMAIL,
        PASS = @PASS,
        NOMBRES = @NOMBRES,
        APELLIDOS = @APELLIDOS,
        DPI = @DPI,
        TELEFONO = @TELEFONO,
        FOTO_PERFIL = @FOTO_PERFIL,
        ID_ESTADO = @ID_ESTADO,
        ROL_ID = @ROL_ID,
        MODIFICADO_POR = @MODIFICADO_POR,
        FE_MODIFICACION = SYSDATETIME()
    WHERE ID_USER = @ID_USER;
END
GO

-- 1. Insertar Usuario
ALTER PROCEDURE SP_I_USUARIO_01
    @ID_APTO INT,
    @EMAIL VARCHAR(150),
    @PASS VARCHAR(150),
    @NOMBRES VARCHAR(150),
    @APELLIDOS VARCHAR(150),
    @DPI VARCHAR(50),
    @TELEFONO VARCHAR(50),    
    @FOTO_PERFIL VARBINARY(MAX),
    @ID_ESTADO INT,
    @ROL_ID INT,
    @CREADO_POR VARCHAR(150)
AS
BEGIN
    INSERT INTO TRZ6_USUARIO (
        ID_APTO,
        EMAIL,
        PASS,
        NOMBRES,
        APELLIDOS,
        DPI,
        TELEFONO,        
        FOTO_PERFIL,
        ID_ESTADO,
        FE_CREACION,
        ROL_ID,
        CREADO_POR
    )
    VALUES (
        @ID_APTO,
        @EMAIL,
        @PASS,
        @NOMBRES,
        @APELLIDOS,
        @DPI,
        @TELEFONO,        
        @FOTO_PERFIL,
        @ID_ESTADO,
        GETDATE(),
        @ROL_ID,
        @CREADO_POR
    )
END
GO

-- 2. Actualizar Usuario
ALTER PROCEDURE SP_U_USUARIO_01
    @ID_USER INT,
    @ID_APTO INT,
    @EMAIL VARCHAR(150),
    @PASS VARCHAR(150),
    @NOMBRES VARCHAR(150),
    @APELLIDOS VARCHAR(150),
    @DPI VARCHAR(50),
    @TELEFONO VARCHAR(50),    
    @FOTO_PERFIL VARBINARY(MAX),
    @ID_ESTADO INT,
    @ROL_ID INT,
    @MODIFICADO_POR VARCHAR(150)
AS
BEGIN
    UPDATE TRZ6_USUARIO
    SET
        ID_APTO = @ID_APTO,
        EMAIL = @EMAIL,
        PASS = @PASS,
        NOMBRES = @NOMBRES,
        APELLIDOS = @APELLIDOS,
        DPI = @DPI,
        TELEFONO = @TELEFONO,        
        FOTO_PERFIL = @FOTO_PERFIL,
        ID_ESTADO = @ID_ESTADO,
        ROL_ID = @ROL_ID,
        MODIFICADO_POR = @MODIFICADO_POR,
        FE_MODIFICACION = GETDATE()
    WHERE ID_USER = @ID_USER
END
GO

-- 3. Listar Usuarios (con JOINs y formato de fechas)
ALTER PROCEDURE SP_L_USUARIO_01
    @ID_ESTADO INT
AS
BEGIN
    SELECT  
        U.ID_USER,
        U.ID_APTO,
        U.EMAIL,
        U.NOMBRES,
        U.APELLIDOS,
        U.DPI,
        U.TELEFONO,
        U.PASS,
        U.ROL_ID,
        R.ROL_NOM,
        C.NUM_TORRE,
        C.NIVEL,
        E.DESCRIPCION AS ESTADO_DESC,
        U.CREADO_POR,
        U.MODIFICADO_POR,
        CONVERT(VARCHAR(10), U.FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_CREACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION,
        CONVERT(VARCHAR(10), U.FE_MODIFICACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_MODIFICACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_MODIFICACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_MODIFICACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_MODIFICACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_MODIFICACION
    FROM TRZ6_USUARIO U
    INNER JOIN TRZ6_ROL R ON U.ROL_ID = R.ROL_ID
    INNER JOIN TRZ6_CONDOMINIO C ON U.ID_APTO = C.ID_APTO
    INNER JOIN TRZ6_CAT_ESTADO E ON U.ID_ESTADO = E.ID_ESTADO
    WHERE U.ID_ESTADO = @ID_ESTADO
    ORDER BY U.ID_USER DESC
END
GO

-- 4. Obtener Usuario por ID
ALTER PROCEDURE SP_O_USUARIO_01
    @ID_USER INT
AS
BEGIN
    SELECT  
        U.ID_USER,
        U.ID_APTO,
        U.EMAIL,
        U.PASS,
        U.NOMBRES,
        U.APELLIDOS,
        U.DPI,
        U.TELEFONO,        
        U.FOTO_PERFIL,
        U.ID_ESTADO,
        U.ROL_ID,
        U.CREADO_POR,
        U.MODIFICADO_POR,
        CONVERT(VARCHAR(10), U.FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_CREACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION,
        CONVERT(VARCHAR(10), U.FE_MODIFICACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, U.FE_MODIFICACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, U.FE_MODIFICACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, U.FE_MODIFICACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, U.FE_MODIFICACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_MODIFICACION
    FROM TRZ6_USUARIO U
    WHERE U.ID_USER = @ID_USER
END
GO

select * from TRZ6_USUARIO go
EXEC SP_O_USUARIO_01 6