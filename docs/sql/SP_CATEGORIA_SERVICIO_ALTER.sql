USE [TRZ6_CONDOMINIO]

SELECT * FROM TRZ6_CAT_SERVICIO GO

SELECT COLUMN_NAME
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'TRZ6_CAT_SERVICIO'
ORDER BY ORDINAL_POSITION
GO

-- Eliminar restricción
ALTER TABLE TRZ6_CAT_SERVICIO
DROP CONSTRAINT UQ__TRZ6_CAT__CC87E126A97C4F6A;

-- 1. Eliminar el campo CODIGO
ALTER TABLE TRZ6_CAT_SERVICIO
DROP COLUMN CODIGO;

-- 2. Agregar los nuevos campos
ALTER TABLE TRZ6_CAT_SERVICIO
ADD 
	MODIFICADO_POR VARCHAR(100) NULL,
    CREADO_POR VARCHAR(100) NOT NULL,    
    FE_MODIFICACION DATETIME NULL;

-- 1. Restringir DESCRIPCION como única
ALTER TABLE TRZ6_CAT_SERVICIO
ADD CONSTRAINT UQ_TRZ6_CAT_SERVICIO_DESCRIPCION UNIQUE (DESCRIPCION);

-- 2. SP para Listar todos
CREATE OR ALTER PROCEDURE SP_L_CAT_SERVICIO_TODOS
AS
BEGIN
    SELECT 
        ID_SERVICIO,
        DESCRIPCION,
        CREADO_POR,
        CONVERT(VARCHAR, DATEADD(HOUR, -6, FE_CREACION), 103) + ' ' + 
        RIGHT(CONVERT(VARCHAR(20), DATEADD(HOUR, -6, FE_CREACION), 100), 7) AS FE_CREACION,
        MODIFICADO_POR,
        CASE 
            WHEN FE_MODIFICACION IS NOT NULL THEN 
                CONVERT(VARCHAR, DATEADD(HOUR, -6, FE_MODIFICACION), 103) + ' ' + 
                RIGHT(CONVERT(VARCHAR(20), DATEADD(HOUR, -6, FE_MODIFICACION), 100), 7)
            ELSE NULL
        END AS FE_MODIFICACION
    FROM TRZ6_CAT_SERVICIO
    ORDER BY ID_SERVICIO DESC;
END
GO

-- 3. SP para Obtener por ID
CREATE OR ALTER PROCEDURE SP_O_CAT_SERVICIO_01
    @ID_SERVICIO INT
AS
BEGIN
    SELECT 
        ID_SERVICIO,
        DESCRIPCION,
        CREADO_POR,
        CONVERT(VARCHAR, DATEADD(HOUR, -6, FE_CREACION), 103) + ' ' + 
        RIGHT(CONVERT(VARCHAR(20), DATEADD(HOUR, -6, FE_CREACION), 100), 7) AS FE_CREACION,
        MODIFICADO_POR,
        CASE 
            WHEN FE_MODIFICACION IS NOT NULL THEN 
                CONVERT(VARCHAR, DATEADD(HOUR, -6, FE_MODIFICACION), 103) + ' ' + 
                RIGHT(CONVERT(VARCHAR(20), DATEADD(HOUR, -6, FE_MODIFICACION), 100), 7)
            ELSE NULL
        END AS FE_MODIFICACION
    FROM TRZ6_CAT_SERVICIO
    WHERE ID_SERVICIO = @ID_SERVICIO;
END
GO

-- 4. SP para Insertar
CREATE OR ALTER PROCEDURE SP_I_CAT_SERVICIO_01
    @DESCRIPCION VARCHAR(255),
    @CREADO_POR VARCHAR(100)
AS
BEGIN
    IF EXISTS (SELECT 1 FROM TRZ6_CAT_SERVICIO WHERE DESCRIPCION = @DESCRIPCION)
    BEGIN
        RAISERROR('La descripción ya existe.', 16, 1);
        RETURN;
    END

    INSERT INTO TRZ6_CAT_SERVICIO (DESCRIPCION, CREADO_POR, FE_CREACION, MODIFICADO_POR, FE_MODIFICACION)
    VALUES (@DESCRIPCION, @CREADO_POR, DATEADD(HOUR, -6, GETDATE()), @CREADO_POR, DATEADD(HOUR, -6, GETDATE()));
END
GO

-- 5. SP para Actualizar
CREATE OR ALTER PROCEDURE SP_U_CAT_SERVICIO_01
    @ID_SERVICIO INT,
    @DESCRIPCION VARCHAR(255),
    @MODIFICADO_POR VARCHAR(100)
AS
BEGIN
    IF EXISTS (SELECT 1 FROM TRZ6_CAT_SERVICIO WHERE DESCRIPCION = @DESCRIPCION AND ID_SERVICIO != @ID_SERVICIO)
    BEGIN
        RAISERROR('La descripción ya existe.', 16, 1);
        RETURN;
    END

    UPDATE TRZ6_CAT_SERVICIO
    SET 
        DESCRIPCION = @DESCRIPCION,
        MODIFICADO_POR = @MODIFICADO_POR,
        FE_MODIFICACION = DATEADD(HOUR, -6, GETDATE())
    WHERE ID_SERVICIO = @ID_SERVICIO;
END
GO

-- 6. SP para Eliminar
CREATE OR ALTER PROCEDURE SP_D_CAT_SERVICIO_01
    @ID_SERVICIO INT
AS
BEGIN
    DELETE FROM TRZ6_CAT_SERVICIO
    WHERE ID_SERVICIO = @ID_SERVICIO;
END
GO

/****************************** ALTER TABLE ***********************************/
/**************** 1. ALTER TABLE – Nueva estructura de TRZ6_CAT_SERVICIO *********************/

-- 1. Quitar la restricción UNIQUE de CODIGO si existía
ALTER TABLE TRZ6_CAT_SERVICIO DROP CONSTRAINT UQ__TRZ6_CAT__CC87E126A97C4F6A;

-- 2. Eliminar el campo CODIGO
ALTER TABLE TRZ6_CAT_SERVICIO DROP COLUMN CODIGO;

-- 3. Renombrar DESCRIPCION a SERVICIO (para nombres cortos)
EXEC sp_rename 'TRZ6_CAT_SERVICIO.DESCRIPCION', 'SERVICIO', 'COLUMN';

-- 4. Agregar nuevo campo DESCRIPCION (texto largo)
ALTER TABLE TRZ6_CAT_SERVICIO ADD DESCRIPCION TEXT NULL;

-- 5. Agregar campos de auditoría
ALTER TABLE TRZ6_CAT_SERVICIO 
ADD CREADO_POR VARCHAR(100),
    FE_MODIFICACION DATETIME,
    MODIFICADO_POR VARCHAR(100);

-- 6. Crear índice único para SERVICIO
ALTER TABLE TRZ6_CAT_SERVICIO ADD CONSTRAINT UQ_SERVICIO UNIQUE (SERVICIO);

/****************************** STORE PROCEDURE ***********************************/
-- 2. Stored Procedures (SP) / Insertar
CREATE OR ALTER PROCEDURE SP_I_CAT_SERVICIO_01
    @SERVICIO VARCHAR(255),
    @DESCRIPCION TEXT,
    @CREADO_POR VARCHAR(100)
AS
BEGIN
    SET NOCOUNT ON;
    INSERT INTO TRZ6_CAT_SERVICIO (SERVICIO, DESCRIPCION, CREADO_POR, FE_CREACION, MODIFICADO_POR, FE_MODIFICACION)
    VALUES (@SERVICIO, @DESCRIPCION, @CREADO_POR, DATEADD(HOUR, -6, GETDATE()), @CREADO_POR, DATEADD(HOUR, -6, GETDATE()));
END
GO

-- 3. Stored Procedures (SP) / Actualizar
CREATE OR ALTER PROCEDURE SP_U_CAT_SERVICIO_01
    @ID_SERVICIO INT,
    @SERVICIO VARCHAR(255),
    @DESCRIPCION TEXT,
    @MODIFICADO_POR VARCHAR(100)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE TRZ6_CAT_SERVICIO
    SET 
        SERVICIO = @SERVICIO,
        DESCRIPCION = @DESCRIPCION,
        MODIFICADO_POR = @MODIFICADO_POR,
        FE_MODIFICACION = DATEADD(HOUR, -6, GETDATE())
    WHERE ID_SERVICIO = @ID_SERVICIO;
END
GO

-- 4. Stored Procedures (SP) / Eliminar
CREATE OR ALTER PROCEDURE SP_D_CAT_SERVICIO_01
    @ID_SERVICIO INT
AS
BEGIN
    DELETE FROM TRZ6_CAT_SERVICIO WHERE ID_SERVICIO = @ID_SERVICIO;
END
GO

-- 5. Stored Procedures (SP) / Obtener por ID
CREATE OR ALTER PROCEDURE SP_O_CAT_SERVICIO_01
    @ID_SERVICIO INT
AS
BEGIN
    SELECT * FROM TRZ6_CAT_SERVICIO WHERE ID_SERVICIO = @ID_SERVICIO;
END
GO

-- 6. Stored Procedures (SP) / Listar todos
CREATE OR ALTER PROCEDURE SP_L_CAT_SERVICIO_TODOS
AS
BEGIN
    SELECT * FROM TRZ6_CAT_SERVICIO ORDER BY ID_SERVICIO DESC;
END
GO

/****************************** ALTER TABLE NUEVA ACTUALIZACIÓN ***********************************/
/********** LISTAR POR ID_SERVICIO **********/
ALTER PROCEDURE SP_L_CAT_SERVICIO_01  
    @ID_SERVICIO INT  
AS  
BEGIN  
    SELECT  
        ID_SERVICIO,
        SERVICIO,
        DESCRIPCION,
        CONVERT(VARCHAR(10), FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, FE_CREACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION,
        CREADO_POR,
        MODIFICADO_POR,
        CONVERT(VARCHAR(10), FE_MODIFICACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, FE_MODIFICACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, FE_MODIFICACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_MODIFICACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, FE_MODIFICACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_MODIFICACION
    FROM TRZ6_CAT_SERVICIO  
    WHERE ID_SERVICIO = @ID_SERVICIO
END  
GO

/********** LISTAR TODOS **********/
ALTER PROCEDURE SP_L_CAT_SERVICIO_TODOS
AS
BEGIN
    SELECT
        ID_SERVICIO,
        SERVICIO,
        DESCRIPCION,
        CONVERT(VARCHAR(10), FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, FE_CREACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION,
        CREADO_POR,
        CONVERT(VARCHAR(10), FE_MODIFICACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, FE_MODIFICACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, FE_MODIFICACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_MODIFICACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, FE_MODIFICACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_MODIFICACION,
        MODIFICADO_POR
    FROM TRZ6_CAT_SERVICIO
    ORDER BY ID_SERVICIO DESC
END
GO

/********** OBTENER POR ID **********/
ALTER PROCEDURE SP_O_CAT_SERVICIO_01
    @ID_SERVICIO INT
AS
BEGIN
    SELECT
        ID_SERVICIO,
        SERVICIO,
        DESCRIPCION,
        CREADO_POR,
        CONVERT(VARCHAR(10), FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, FE_CREACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION,
        MODIFICADO_POR,
        CONVERT(VARCHAR(10), FE_MODIFICACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), CASE WHEN DATEPART(HOUR, FE_MODIFICACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, FE_MODIFICACION) % 12 END), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_MODIFICACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, FE_MODIFICACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_MODIFICACION
    FROM TRZ6_CAT_SERVICIO
    WHERE ID_SERVICIO = @ID_SERVICIO
END
GO

/********** INSERTAR **********/
ALTER PROCEDURE SP_I_CAT_SERVICIO_01
    @CREADO_POR VARCHAR(150),
    @SERVICIO VARCHAR(150),
    @DESCRIPCION NVARCHAR(MAX)
AS
BEGIN
    DECLARE @FechaActual DATETIME = DATEADD(HOUR, -6, GETUTCDATE()); -- Hora Guatemala
    -- Validar duplicidad
    IF EXISTS (SELECT 1 FROM TRZ6_CAT_SERVICIO WHERE SERVICIO = @SERVICIO)
    BEGIN
        RAISERROR('El nombre del servicio ya existe. No se puede duplicar.', 16, 1);
        RETURN;
    END

    INSERT INTO TRZ6_CAT_SERVICIO (
        CREADO_POR,
        SERVICIO,
        DESCRIPCION,
        FE_CREACION,
        MODIFICADO_POR,
        FE_MODIFICACION
    )
    VALUES (
        @CREADO_POR,
        @SERVICIO,
        @DESCRIPCION,
        @FechaActual,
        @CREADO_POR,
        @FechaActual
    );
END
GO

/********** ACTUALIZAR **********/
ALTER PROCEDURE SP_U_CAT_SERVICIO_01
    @ID_SERVICIO INT,
    @CREADO_POR VARCHAR(150),
    @SERVICIO VARCHAR(150),
    @DESCRIPCION NVARCHAR(MAX),
    @MODIFICADO_POR VARCHAR(150)
AS
BEGIN
    DECLARE @FechaActual DATETIME = DATEADD(HOUR, -6, GETUTCDATE()); -- Hora Guatemala
    -- Validar duplicidad excluyendo el mismo registro
    IF EXISTS (SELECT 1 FROM TRZ6_CAT_SERVICIO WHERE SERVICIO = @SERVICIO AND ID_SERVICIO != @ID_SERVICIO)
    BEGIN
        RAISERROR('El nombre del servicio ya existe. No se puede duplicar.', 16, 1);
        RETURN;
    END

    UPDATE TRZ6_CAT_SERVICIO
    SET
        CREADO_POR = @CREADO_POR,
        SERVICIO = @SERVICIO,
        DESCRIPCION = @DESCRIPCION,
        MODIFICADO_POR = @MODIFICADO_POR,
        FE_MODIFICACION = @FechaActual
    WHERE ID_SERVICIO = @ID_SERVICIO;
END
GO

/********** ELIMINAR **********/
ALTER PROCEDURE SP_D_CAT_SERVICIO_01
    @ID_SERVICIO INT
AS
BEGIN
    DELETE FROM TRZ6_CAT_SERVICIO
    WHERE ID_SERVICIO = @ID_SERVICIO
END
GO

select * from TRZ6_CAT_SERVICIO
select * from TRZ6_USUARIO