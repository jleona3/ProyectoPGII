use [TRZ6_CONDOMINIO]

-- Listar todos los registro por C�digo Catgor�a Estado
CREATE PROCEDURE SP_L_CAT_ESTADO_01
    @CODIGO VARCHAR(30)
AS
BEGIN
    SELECT
        ID_ESTADO,
        CODIGO,
        DESCRIPCION,
        FE_CREACION
    FROM TRZ6_CAT_ESTADO
    WHERE CODIGO = @CODIGO
END
GO

-- Obtener Categor�a Estado por ID
CREATE PROCEDURE SP_O_CAT_ESTADO_01
    @ID_ESTADO INT
AS
BEGIN
    SELECT
        ID_ESTADO,
        CODIGO,
        DESCRIPCION,
        FE_CREACION
    FROM TRZ6_CAT_ESTADO
    WHERE ID_ESTADO = @ID_ESTADO
END
GO

-- Eliminar Categor�a Estado por ID
CREATE PROCEDURE SP_D_CAT_ESTADO_01
    @ID_ESTADO INT
AS
BEGIN
    DELETE FROM TRZ6_CAT_ESTADO
    WHERE ID_ESTADO = @ID_ESTADO
END
GO

-- Insertar Categor�a Estado
CREATE PROCEDURE SP_I_CAT_ESTADO_01
    @CODIGO VARCHAR(30),
    @DESCRIPCION VARCHAR(150)
AS
BEGIN
    INSERT INTO TRZ6_CAT_ESTADO (
        CODIGO,
        DESCRIPCION,
        FE_CREACION
    )
    VALUES (
        @CODIGO,
        @DESCRIPCION,
        SYSUTCDATETIME()
    )
END
GO

-- Update Registro Categor�a Estado
CREATE PROCEDURE SP_U_CAT_ESTADO_01
    @ID_ESTADO INT,
    @CODIGO VARCHAR(30),
    @DESCRIPCION VARCHAR(150)
AS
BEGIN
    UPDATE TRZ6_CAT_ESTADO
    SET
        CODIGO = @CODIGO,
        DESCRIPCION = @DESCRIPCION
    WHERE ID_ESTADO = @ID_ESTADO
END
GO

SP_HELPTEXT SP_L_CAT_ESTADO_01 'Jorge León' go

ALTER PROCEDURE SP_L_CAT_ESTADO_01  
    @CREADO_POR VARCHAR(150)  
AS  
BEGIN  
    SELECT  
        ID_ESTADO,  
        CREADO_POR,  
        DESCRIPCION,  
        CONVERT(VARCHAR(10), FE_CREACION, 105) + ' ' +  
        RIGHT('0' + CONVERT(VARCHAR(5), DATEPART(HOUR, FE_CREACION) % 12), 2) + ':' +  
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_CREACION)), 2) + ' ' +  
        CASE WHEN DATEPART(HOUR, FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION  
    FROM TRZ6_CAT_ESTADO  
    WHERE CREADO_POR = @CREADO_POR  
END 
GO


/********** ACTUALIZACION DE TODOS LOS PROCEDIMIENTOS **********/
-- Listar todos los registros de TRZ6_CAT_ESTADO
CREATE PROCEDURE SP_L_CAT_ESTADO_TODOS
AS
BEGIN
    SELECT
        ID_ESTADO,
        DESCRIPCION,
        CONVERT(VARCHAR(10), FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(5), DATEPART(HOUR, FE_CREACION) % 12), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION,
        CREADO_POR
    FROM TRZ6_CAT_ESTADO
    ORDER BY ID_ESTADO DESC
END
GO


-- Listar todos los registros por CREADO_POR
ALTER PROCEDURE SP_L_CAT_ESTADO_01
    @ID_ESTADO INT
AS
BEGIN
    SELECT
        ID_ESTADO,
        CREADO_POR,
        DESCRIPCION,
        CONVERT(VARCHAR(10), FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(2), 
            CASE WHEN DATEPART(HOUR, FE_CREACION) % 12 = 0 THEN 12 ELSE DATEPART(HOUR, FE_CREACION) % 12 END
        ), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION
    FROM TRZ6_CAT_ESTADO
    WHERE ID_ESTADO = @ID_ESTADO
END
GO

SELECT * FROM TRZ6_CAT_ESTADO GO

-- Obtener Categoría Estado por ID
ALTER PROCEDURE SP_O_CAT_ESTADO_01
    @ID_ESTADO INT
AS
BEGIN
    SELECT
        ID_ESTADO,
        CREADO_POR,
        DESCRIPCION,
        CONVERT(VARCHAR(10), FE_CREACION, 105) + ' ' +
        RIGHT('0' + CONVERT(VARCHAR(5), DATEPART(HOUR, FE_CREACION) % 12), 2) + ':' +
        RIGHT('0' + CONVERT(VARCHAR(2), DATEPART(MINUTE, FE_CREACION)), 2) + ' ' +
        CASE WHEN DATEPART(HOUR, FE_CREACION) >= 12 THEN 'PM' ELSE 'AM' END AS FE_CREACION
    FROM TRZ6_CAT_ESTADO
    WHERE ID_ESTADO = @ID_ESTADO
END
GO

select * from TRZ6_CAT_ESTADO GO

-- Eliminar Categoría Estado por ID
ALTER PROCEDURE SP_D_CAT_ESTADO_01
    @ID_ESTADO INT
AS
BEGIN
    DELETE FROM TRZ6_CAT_ESTADO
    WHERE ID_ESTADO = @ID_ESTADO
END
GO

-- Insertar Categoría Estado
ALTER PROCEDURE SP_I_CAT_ESTADO_01
    @CREADO_POR VARCHAR(150),
    @DESCRIPCION VARCHAR(150)
AS
BEGIN
    INSERT INTO TRZ6_CAT_ESTADO (
        CREADO_POR,
        DESCRIPCION,
        FE_CREACION
    )
    VALUES (
        @CREADO_POR,
        @DESCRIPCION,
        SYSUTCDATETIME()
    )
END
GO

-- Actualizar Categoría Estado
ALTER PROCEDURE SP_U_CAT_ESTADO_01
    @ID_ESTADO INT,
    @CREADO_POR VARCHAR(150),
    @DESCRIPCION VARCHAR(150)
AS
BEGIN
    UPDATE TRZ6_CAT_ESTADO
    SET
        CREADO_POR = @CREADO_POR,
        DESCRIPCION = @DESCRIPCION
    WHERE ID_ESTADO = @ID_ESTADO
END
GO
