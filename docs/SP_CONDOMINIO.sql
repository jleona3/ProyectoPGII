SELECT COLUMN_NAME
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'TRZ6_CONDOMINIO'
ORDER BY ORDINAL_POSITION
GO

SELECT * FROM TRZ6_CONDOMINIO GO

-- Listar Condominio por ID_ESTADO
CREATE PROCEDURE SP_L_CONDOMINIO_01
    @ID_ESTADO INT
AS
BEGIN
    SELECT
        ID_APTO,
        NUM_TORRE,
        NIVEL,
        NUM_APTO,
        METROS_M2,
        ID_ESTADO,
        FE_CREACION
    FROM TRZ6_CONDOMINIO
    WHERE ID_ESTADO = @ID_ESTADO
END
GO

-- Obtener Condominio por ID_APTO
CREATE PROCEDURE SP_O_CONDOMINIO_01
    @ID_APTO INT
AS
BEGIN
    SELECT
        ID_APTO,
        NUM_TORRE,
        NIVEL,
        NUM_APTO,
        METROS_M2,
        ID_ESTADO,
        FE_CREACION
    FROM TRZ6_CONDOMINIO
    WHERE ID_APTO = @ID_APTO
END
GO

-- Eliminar Condominio por ID_APTO
CREATE PROCEDURE SP_D_CONDOMINIO_01
    @ID_APTO INT
AS
BEGIN
    DELETE FROM TRZ6_CONDOMINIO
    WHERE ID_APTO = @ID_APTO
END
GO

-- Insertar nuevo Condominio
CREATE PROCEDURE SP_I_CONDOMINIO_01
    @NUM_TORRE VARCHAR(50),
    @NIVEL VARCHAR(50),
    @NUM_APTO VARCHAR(50),
    @METROS_M2 DECIMAL(10,2),
    @ID_ESTADO INT
AS
BEGIN
    INSERT INTO TRZ6_CONDOMINIO (
        NUM_TORRE,
        NIVEL,
        NUM_APTO,
        METROS_M2,
        ID_ESTADO,
        FE_CREACION
    )
    VALUES (
        @NUM_TORRE,
        @NIVEL,
        @NUM_APTO,
        @METROS_M2,
        @ID_ESTADO,
        SYSUTCDATETIME()
    )
END
GO

-- Actualizar Condominio por ID_APTO
CREATE PROCEDURE SP_U_CONDOMINIO_01
    @ID_APTO INT,
    @NUM_TORRE VARCHAR(50),
    @NIVEL VARCHAR(50),
    @NUM_APTO VARCHAR(50),
    @METROS_M2 DECIMAL(10,2),
    @ID_ESTADO INT
AS
BEGIN
    UPDATE TRZ6_CONDOMINIO
    SET
        NUM_TORRE = @NUM_TORRE,
        NIVEL = @NIVEL,
        NUM_APTO = @NUM_APTO,
        METROS_M2 = @METROS_M2,
        ID_ESTADO = @ID_ESTADO
    WHERE ID_APTO = @ID_APTO
END
GO